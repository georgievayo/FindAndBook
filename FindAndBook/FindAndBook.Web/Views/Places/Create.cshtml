@model FindAndBook.Web.Models.Places.CreateViewModel
@{
    ViewBag.Title = "Create Place";
}
@using (Html.BeginForm("Create", "Places"))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>Add place</legend>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label"})
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Types, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.DropDownListFor(model => model.Types, Model.TypeList, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
        </div>
        <div class="form-group row">
            <label class="col-md-offset-2 col-md-1 control-label row">Address</label>
            <div class="row">
                <div class="row">
                    @Html.EditorFor(model => model.Country, new {htmlAttributes = new {@class = "col-md-7 form-control", placeholder = "Country" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new {@class = "text-danger"})
                </div>
                <div class="row">
                    @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "col-md-offset-3 col-md-7 form-control", placeholder = "City"}})
                    @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
                </div>
                <div class="row">
                    @Html.EditorFor(model => model.Area, new {htmlAttributes = new {@class = "col-md-offset-3 col-md-7 form-control", placeholder="Area" } })
                    @Html.ValidationMessageFor(model => model.Area, "", new {@class = "text-danger"})
                </div>
                <div class="row">
                    @Html.EditorFor(model => model.Street, new {htmlAttributes = new {@class = "col-md-offset-3 col-md-7 form-control", placeholder = "Street" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new {@class = "text-danger"})
                </div>
                <div class="row">
                    @Html.EditorFor(model => model.Number, new {htmlAttributes = new {@class = "col-md-offset-3 col-md-7 form-control", placeholder = "Number" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.WeekdayHours, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.EditorFor(model => model.WeekdayHours, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.WeekdayHours, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.WeekendHours, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.EditorFor(model => model.WeekendHours, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.WeekendHours, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.AverageBill, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label" })
            @Html.EditorFor(model => model.AverageBill, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.AverageBill, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.TwoPeopleCount, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label"})
            @Html.EditorFor(model => model.TwoPeopleCount, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.TwoPeopleCount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.FourPeopleCount, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label"})
            @Html.EditorFor(model => model.FourPeopleCount, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.FourPeopleCount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.SixPeopleCount, htmlAttributes: new { @class = "col-md-1 col-md-offset-2 control-label"})
            @Html.EditorFor(model => model.SixPeopleCount, new { htmlAttributes = new { @class = "col-md-7 form-control" } })
            @Html.ValidationMessageFor(model => model.SixPeopleCount, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div class="col-lg-10 col-lg-offset-2">
                <button type="reset" class="btn btn-default">Cancel</button>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </fieldset>
}